incomplete concrete SemLexI of SemLex = open Lexicon, Structural, Syntax in {

  lin
    add_V3 = Lexicon.add_V3 ;
    airplane_N = Lexicon.airplane_N ;
    already_Adv = Lexicon.already_Adv ;
    animal_N = Lexicon.animal_N ;
    answer_V2S = Lexicon.answer_V2S ;
    apartment_N = Lexicon.apartment_N ;
    apple_N = Lexicon.apple_N ;
    art_N = Lexicon.art_N ;
    ashes_N = Lexicon.ashes_N ;
    ask_V2Q = Lexicon.ask_V2Q ;
    baby_N = Lexicon.baby_N ;
    back_N = Lexicon.back_N ;
    bad_A = Lexicon.bad_A ;
    bank_N = Lexicon.bank_N ;
    bark_N = Lexicon.bark_N ;
    beautiful_A = Lexicon.beautiful_A ;
    become_VA = Lexicon.become_VA;
    beer_N = Lexicon.beer_N ;
    beg_V2V = Lexicon.beg_V2V ;
    belly_N = Lexicon.belly_N ;
    big_A = Lexicon.big_A ;
    bike_N = Lexicon.bike_N ;
    bird_N = Lexicon.bird_N ;
    bite_V2 = Lexicon.bite_V2 ;
    black_A = Lexicon.black_A ;
    blood_N = Lexicon.blood_N ;
    blow_V = Lexicon.blow_V ;
    blue_A = Lexicon.blue_A ;
    boat_N = Lexicon.boat_N ;
    bone_N = Lexicon.bone_N ;
    book_N = Lexicon.book_N ;
    boot_N = Lexicon.boot_N ;
    boss_N = Lexicon.boss_N ;
    boy_N = Lexicon.boy_N ;
    bread_N = Lexicon.bread_N ;
    break_V2 = Lexicon.break_V2 ;
    breast_N = Lexicon.breast_N ;
    breathe_V = Lexicon.breathe_V ;
    broad_A = Lexicon.broad_A ;
    brother_N2 = Lexicon.brother_N2 ;
    brown_A = Lexicon.brown_A  ;
    burn_V = Lexicon.burn_V ;
    butter_N = Lexicon.butter_N ;
    buy_V2 = Lexicon.buy_V2 ;
    camera_N = Lexicon.camera_N ;
    cap_N = Lexicon.cap_N ;
    car_N = Lexicon.car_N ;
    carpet_N = Lexicon.carpet_N ;
    cat_N = Lexicon.cat_N ;
    ceiling_N = Lexicon.ceiling_N ;
    chair_N = Lexicon.chair_N ;
    cheese_N = Lexicon.cheese_N ;
    child_N = Lexicon.child_N ;
    church_N = Lexicon.church_N ;
    city_N = Lexicon.city_N ;
    clean_A = Lexicon.clean_A ;
    clever_A = Lexicon.clever_A  ;
    close_V2 = Lexicon.close_V2 ;
    cloud_N = Lexicon.cloud_N ;
    coat_N = Lexicon.coat_N ;
    cold_A = Lexicon.cold_A ;
    come_V = Lexicon.come_V ;
    computer_N = Lexicon.computer_N ;
    correct_A = Lexicon.correct_A  ; -- ???
    country_N = Lexicon.country_N ;
    count_V2 = Lexicon.count_V2 ;
    cousin_N = Lexicon.cousin_N ;
    cow_N = Lexicon.cow_N ;
    cut_V2 = Lexicon.cut_V2 ;
    day_N = Lexicon.day_N;
    die_V = Lexicon.die_V ;
    dig_V = Lexicon.dig_V ;
    dirty_A = Lexicon.dirty_A ;
    distance_N3 = Lexicon.distance_N3;
    doctor_N = Lexicon.doctor_N ;
    dog_N = Lexicon.dog_N ;
    door_N = Lexicon.door_N ;
    -- do_V2 = Lexicon.do_V2  ; -- ???
    drink_V2 = Lexicon.drink_V2 ;
    dry_A = Lexicon.dry_A ;
    dull_A = Lexicon.dull_A ;
    dust_N = Lexicon.dust_N ;
    ear_N = Lexicon.ear_N ;
    earth_N = Lexicon.earth_N ;
    -- easy_A2V = Lexicon._A 2 ;
    eat_V2 = Lexicon.eat_V2 ;
    egg_N = Lexicon.egg_N ;
    empty_A = Lexicon.empty_A ;
    enemy_N = Lexicon.enemy_N ;
    eye_N = Lexicon.eye_N ;
    factory_N = Lexicon.factory_N ;
    fall_V = Lexicon.fall_V ;
    far_Adv = Lexicon.far_Adv ;
    father_N2 = Lexicon.father_N2;
    fat_N = Lexicon.fat_N ;
    fear_VS = Lexicon.fear_VS;
    fear_V2 = Lexicon.fear_V2 ;
    feather_N = Lexicon.feather_N ;
    fight_V2 = Lexicon.fight_V2 ;
    find_V2 = Lexicon.find_V2 ;
    fingernail_N = Lexicon.fingernail_N;
    fire_N = Lexicon.fire_N ;
    fish_N = Lexicon.fish_N ;
    float_V = Lexicon.float_V ;
    floor_N = Lexicon.floor_N ;
    flower_N = Lexicon.flower_N ; 
    flow_V = Lexicon.flow_V  ;
    fly_V = Lexicon.fly_V  ; -- ???
    fog_N = Lexicon.fog_N ;
    foot_N = Lexicon.foot_N ;
    forest_N = Lexicon.forest_N ;
    forget_V2 = Lexicon.forget_V2 ;
    freeze_V = Lexicon.freeze_V  ;
    fridge_N = Lexicon.fridge_N ;
    friend_N = Lexicon.friend_N ;
    fruit_N = Lexicon.fruit_N ;
    full_A = Lexicon.full_A ; 
    -- fun_AV = Lexicon._A  ;
    garden_N = Lexicon.garden_N ;
    girl_N = Lexicon.girl_N ;
    give_V3 = Lexicon.give_V3;
    glove_N = Lexicon.glove_N ;
    gold_N = Lexicon.gold_N ;
    good_A = Lexicon.good_A ;
    go_V = Lexicon.go_V ;
    grammar_N = Lexicon.grammar_N ;
    grass_N = Lexicon.grass_N ; -- Problem: the grass grows
    green_A = Lexicon.green_A ;
    guts_N = Lexicon.guts_N ;
    hair_N = Lexicon.hair_N ;
    hand_N = Lexicon.hand_N ;
    harbour_N = Lexicon.harbour_N ;
    hate_V2 = Lexicon.hate_V2 ;
    hat_N = Lexicon.hat_N ;
    head_N = Lexicon.head_N ;
    heart_N = Lexicon.heart_N ;
    hear_V2 = Lexicon.hear_V2 ;
    heavy_A = Lexicon.heavy_A ;
    hill_N = Lexicon.hill_N ;
    hit_V2 = Lexicon.hit_V2 ;
    hold_V2 = Lexicon.hold_V2  ;
    hope_VS = Lexicon.hope_VS ;
    horn_N = Lexicon.horn_N ;
    horse_N = Lexicon.horse_N ;
    hot_A = Lexicon.hot_A ;
    house_N = Lexicon.house_N ;
    hunt_V2 = Lexicon.hunt_V2 ;
    husband_N = Lexicon.husband_N ;
    ice_N = Lexicon.ice_N ;
    important_A = Lexicon.important_A ;
    industry_N = Lexicon.industry_N ;
    iron_N = Lexicon.iron_N ;
    john_PN = Lexicon.john_PN ;
    jump_V = Lexicon.jump_V ;
    kill_V2 = Lexicon.kill_V2 ;
    king_N = Lexicon.king_N ;
    knee_N = Lexicon.knee_N ;
    know_V2 = Lexicon.know_V2 ;
    know_VQ = Lexicon.know_VQ;
    know_VS = Lexicon.know_VS;
    lake_N = Lexicon.lake_N ;
    lamp_N = Lexicon.lamp_N ;
    language_N = Lexicon.language_N ;
    laugh_V = Lexicon.laugh_V ;
    leaf_N = Lexicon.leaf_N ;
    learn_V2 = Lexicon.learn_V2 ;
    leather_N = Lexicon.leather_N ;
    leave_V2 = Lexicon.leave_V2 ;
    -- left_Ord : Ord ;
    leg_N = Lexicon.leg_N ;
    lie_V = Lexicon.lie_V ;
    like_V2 = Lexicon.like_V2 ;
    listen_V2 = Lexicon.listen_V2 ;
    liver_N = Lexicon.liver_N ;
    live_V = Lexicon.live_V ;
    long_A = Lexicon.long_A ; --???
    lose_V2 = Lexicon.lose_V2 ;
    louse_N = Lexicon.louse_N ;
    love_N = Lexicon.love_N ;
    love_V2 = Lexicon.love_V2 ;
    man_N = Lexicon.man_N ;
    married_A2 = Lexicon.married_A2;
    meat_N = Lexicon.meat_N ;
    milk_N = Lexicon.milk_N ;
    moon_N = Lexicon.moon_N ;
    mother_N2 = Lexicon.mother_N2;
    mountain_N = Lexicon.mountain_N ;
    mouth_N = Lexicon.mouth_N ;
    music_N = Lexicon.music_N ;
    name_N = Lexicon.name_N ;
    narrow_A = Lexicon.narrow_A ;
    near_A = Lexicon.near_A ;
    neck_N = Lexicon.neck_N ;
    new_A = Lexicon.new_A ;
    newspaper_N = Lexicon.newspaper_N ;
    night_N = Lexicon.night_N ;
    nose_N = Lexicon.nose_N ;
    now_Adv = Lexicon.now_Adv ;
    number_N = Lexicon.number_N ;
    oil_N = Lexicon.oil_N ;
    old_A = Lexicon.old_A ;
    open_V2 = Lexicon.open_V2 ;
    paint_V2A = Lexicon.paint_V2A;
    paper_N = Lexicon.paper_N ;
    paris_PN = Lexicon.paris_PN ;
    peace_N = Lexicon.peace_N ;
    pen_N = Lexicon.pen_N ;
    person_N = Lexicon.person_N ;
    planet_N = Lexicon.planet_N ;
    plastic_N = Lexicon.plastic_N ;
    play_V2 = Lexicon.play_V2 ;
    play_V = Lexicon.play_V ;
    policeman_N = Lexicon.policeman_N ;
    priest_N = Lexicon.priest_N ;
    -- probable_AS = Lexicon._A  ;
    pull_V2 = Lexicon.pull_V2 ;
    push_V2 = Lexicon.push_V2 ;
    put_V2 = Lexicon.put_V2 ;
    queen_N = Lexicon.queen_N ;
    question_N = Lexicon.question_N ;
    radio_N = Lexicon.radio_N ;
    rain_N = Lexicon.rain_N ;
    rain_V0 = Lexicon.rain_V0  ;
    read_V2 = Lexicon.read_V2 ;
    -- ready_A = Lexicon._A ; ???
    reason_N = Lexicon.reason_N ;
    red_A = Lexicon.red_A ;
    religion_N = Lexicon.religion_N ;
    restaurant_N = Lexicon.restaurant_N ;
    -- right_Ord : Ord ;
    river_N = Lexicon.river_N ;
    road_N = Lexicon.road_N ;
    rock_N = Lexicon.rock_N ;
    roof_N = Lexicon.roof_N ;
    root_N = Lexicon.root_N ;
    rope_N = Lexicon.rope_N ;
    rotten_A = Lexicon.rotten_A ;
    round_A = Lexicon.round_A ;
    rubber_N = Lexicon.rubber_N ;
    rub_V2 = Lexicon.rub_V2 ;
    rule_N = Lexicon.rule_N;
    run_V = Lexicon.run_V ;
    salt_N = Lexicon.salt_N ;
    sand_N = Lexicon.sand_N ;
    say_VS = Lexicon.say_VS;
    school_N = Lexicon.school_N ;
    science_N = Lexicon.science_N ;
    scratch_V2 = Lexicon.scratch_V2 ;
    sea_N = Lexicon.sea_N ;
    seed_N = Lexicon.seed_N ;
    seek_V2 = Lexicon.seek_V2 ;
    see_V2 = Lexicon.see_V2 ;
    sell_V3 = Lexicon.sell_V3;
    send_V3 = Lexicon.send_V3; -- Problem send to the shop
    sew_V = Lexicon.sew_V ;
    sharp_A = Lexicon.sharp_A ;
    sheep_N = Lexicon.sheep_N ;
    ship_N = Lexicon.ship_N ;
    shirt_N = Lexicon.shirt_N ;
    shoe_N = Lexicon.shoe_N ;
    shop_N = Lexicon.shop_N ;
    short_A = Lexicon.short_A ;
    silver_N = Lexicon.silver_N ;
    sing_V = Lexicon.sing_V ;
    sister_N = Lexicon.sister_N ;
    sit_V = Lexicon.sit_V ;
    skin_N = Lexicon.skin_N ;
    sky_N = Lexicon.sky_N ;
    sleep_V = Lexicon.sleep_V ;
    small_A = Lexicon.small_A ;
    smell_V = Lexicon.smell_V ;
    smoke_N = Lexicon.smoke_N ;
    smooth_A = Lexicon.smooth_A ;
    snake_N = Lexicon.snake_N ;
    snow_N = Lexicon.snow_N ;
    sock_N = Lexicon.sock_N ;
    song_N = Lexicon.song_N ;
    speak_V2 = Lexicon.speak_V2 ;
    spit_V = Lexicon.spit_V ;
    split_V2 = Lexicon.split_V2 ;
    squeeze_V2 = Lexicon.squeeze_V2 ;
    stab_V2 = Lexicon.stab_V2 ;
    stand_V = Lexicon.stand_V ;
    star_N = Lexicon.star_N ;
    steel_N = Lexicon.steel_N ;
    stick_N = Lexicon.stick_N ;
    stone_N = Lexicon.stone_N ;
    stop_V = Lexicon.stop_V ;
    stove_N = Lexicon.stove_N ;
    straight_A = Lexicon.straight_A ;
    student_N = Lexicon.student_N ;
    stupid_A = Lexicon.stupid_A ;
    suck_V2 = Lexicon.suck_V2  ;
    sun_N = Lexicon.sun_N ;
    swell_V = Lexicon.swell_V  ;
    swim_V = Lexicon.swim_V ;
    switch8off_V2 = Lexicon.switch8off_V2 ;
    switch8on_V2 = Lexicon.switch8on_V2 ;
    table_N = Lexicon.table_N ;
    tail_N = Lexicon.tail_N ;
    talk_V3 = Lexicon.talk_V3;
    teacher_N = Lexicon.teacher_N ;
    teach_V2 = Lexicon.teach_V2 ;
    television_N = Lexicon.television_N ;
    thick_A = Lexicon.thick_A ;
    thin_A = Lexicon.thin_A ;
    think_V = Lexicon.think_V ;
    throw_V2 = Lexicon.throw_V2 ;
    tie_V2 = Lexicon.tie_V2 ;
    today_Adv = Lexicon.today_Adv ;
    tongue_N = Lexicon.tongue_N ;
    tooth_N = Lexicon.tooth_N ;
    train_N = Lexicon.train_N ;
    travel_V = Lexicon.travel_V ;
    tree_N = Lexicon.tree_N ;
    turn_V = Lexicon.turn_V ;
    ugly_A = Lexicon.ugly_A ;
    -- uncertain_A = Lexicon.uncertain_A  ; -- ???
    understand_V2 = Lexicon.understand_V2 ;
    university_N = Lexicon.university_N ;
    village_N = Lexicon.village_N ;
    vomit_V = Lexicon.vomit_V ;
    wait_V2 = Lexicon.wait_V2 ;
    walk_V = Lexicon.walk_V ;
    warm_A = Lexicon.warm_A ;
    war_N = Lexicon.war_N ;
    wash_V2 = Lexicon.wash_V2 ;
    watch_V2 = Lexicon.watch_V2 ;
    water_N = Lexicon.water_N ;
    wet_A = Lexicon.wet_A ;
    white_A = Lexicon.white_A ;
    wide_A = Lexicon.wide_A  ;
    wife_N = Lexicon.woman_N ;
    wind_N = Lexicon.wind_N ;
    window_N = Lexicon.window_N ;
    wine_N = Lexicon.wine_N ;
    wing_N = Lexicon.wing_N ;
    win_V2 = Lexicon.win_V2 ;
    wipe_V2 = Lexicon.wipe_V2 ;
    woman_N = Lexicon.woman_N ;
    wonder_VQ = Lexicon.wonder_VQ;
    wood_N = Lexicon.wood_N ;
    worm_N = Lexicon.worm_N ;
    write_V2 = Lexicon.write_V2 ;
    year_N = Lexicon.year_N ;
    yellow_A = Lexicon.yellow_A ;
    young_A = Lexicon.young_A ;

    -- Structural
    above_Prep = Structural.above_Prep ;  
    after_Prep = Structural.after_Prep ;
    -- all_Predet : Predet ;
    -- almost_AdA : AdA ;   
    -- almost_AdN : AdN ;   
    -- although_Subj : Subj ;
    -- always_AdV : AdV ;
    -- and_Conj : Conj ;
    -- because_Subj : Subj ;
    before_Prep = Structural.before_Prep ;
    behind_Prep = Structural.behind_Prep ;
    between_Prep = Structural.between_Prep ;
    -- both7and_DConj : Conj ; -- both...and
  ---b  both7and_DConj : DConj ;
    -- but_PConj : PConj ;
    by8agent_Prep = Structural.by8agent_Prep ; -- by (agent)
    by8means_Prep = Structural.by8means_Prep ; -- by (means of)
    can8know_VV = Structural.can8know_VV ; -- can (capacity)
    can_VV = Structural.can_VV ;      -- can (possibility)
    during_Prep = Structural.during_Prep ;
    -- either7or_DConj : Conj ; -- either...or
  ---b  either7or_DConj : DConj ;
    every_Det = Structural.every_Det ;
    everybody_NP = Structural.everybody_NP ;  -- everybody
    everything_NP = Structural.everything_NP ;
    everywhere_Adv = Structural.everywhere_Adv ;
  ---  first_Ord : Ord ; DEPRECATED
    few_Det = Structural.few_Det ;
    for_Prep = Structural.for_Prep ;
    from_Prep = Structural.from_Prep ;
    he_Pron = Structural.he_Pron ;
    here_Adv = Structural.here_Adv;
--    here7to_Adv = Structural.here7to_Adv; -- to here
--    here7from_Adv = Structural.here7from_Adv;  -- from here
    -- how_IAdv : IAdv ;
    -- how8many_IDet : IDet ;
    -- how8much_IAdv : IAdv ;
    i_Pron = Structural.i_Pron ;
    -- if_Subj : Subj ;
    in8front_Prep = Structural.in8front_Prep ; -- in front of
    in_Prep = Structural.in_Prep ;
    it_Pron = Structural.it_Pron ;
    -- less_CAdv : CAdv ;
    many_Det = Structural.many_Det ;
    --  more_CAdv : CAdv ;
    --most_Predet : Predet ;
    much_Det = Structural.much_Det ;
    must_VV = Structural.must_VV ;
  ---b  no_Phr : Phr ;
    -- no_Utt : Utt ;
    on_Prep = Structural.on_Prep ;
  ---  one_Quant : QuantSg ; DEPRECATED
    -- only_Predet : Predet ;
    -- or_Conj : Conj ;
    -- otherwise_PConj : PConj ;
    part_Prep = Structural.part_Prep ;
    -- please_Voc : Voc ;
    possess_Prep = Structural.possess_Prep ; -- of (possessive)
    -- quite_Adv : AdA ;
    she_Pron = Structural.she_Pron ;
    -- so_AdA : AdA ;
    someSg_Det = Structural.someSg_Det ;
    somePl_Det = Structural.somePl_Det ;
    somebody_NP = Structural.somebody_NP ;
    something_NP = Structural.something_NP ;
    somewhere_Adv = Structural.somewhere_Adv ;
    -- that_Quant : Quant ;
    -- that_Subj : Subj ;
    there_Adv = Structural.there_Adv ;
    there7to_Adv = Structural.there7to_Adv ; -- to there
    there7from_Adv = Structural.there7from_Adv ; -- from there
    -- therefore_PConj : PConj ;
    they_Pron = Structural.they_Pron ; 
    -- this_Quant : Quant ;
    through_Prep = Structural.through_Prep ;
    to_Prep = Structural.to_Prep ;
    -- too_AdA : AdA ;
    under_Prep = Structural.under_Prep ;
    -- very_AdA : AdA ;
    want_VV = Structural.want_VV ;
    we_Pron = Structural.we_Pron ;
    -- whatPl_IP : IP ; -- what (plural)
    -- whatSg_IP : IP ; -- what (singular)
    -- when_IAdv : IAdv ;
    -- when_Subj : Subj ;
    -- where_IAdv : IAdv ;
    -- which_IQuant : IQuant ;
    -- whoPl_IP : IP ;  -- who (plural)
    -- whoSg_IP : IP ;  -- who (singular)
    -- why_IAdv : IAdv ;
    with_Prep = Structural.with_Prep ;
    without_Prep = Structural.without_Prep ;
  ---b  yes_Phr : Phr ;
    -- yes_Utt : Utt ;
    youSg_Pron = Structural.youSg_Pron ; -- you (singular)
    youPl_Pron = Structural.youPl_Pron ; -- you (plural)
    youPol_Pron = Structural.youPol_Pron ; -- you (polite)
      
    -- no_Quant : Quant ; 
    -- not_Predet : Predet ;
    -- if_then_Conj : Conj ;
    -- at_least_AdN : AdN ;
    -- at_most_AdN : AdN ;
    nobody_NP = Structural.nobody_NP;
    nothing_NP = Structural.nobody_NP ;
    except_Prep = Structural.except_Prep ;

    -- as_CAdv : CAdv ;
      
    have_V2 = Structural.have_V2 ;

    theSg_Det = Syntax.theSg_Det ;
    thePl_Det = Syntax.thePl_Det ;
    aSg_Det = Syntax.aSg_Det ;
    aPl_Det = Syntax.aPl_Det ;
}